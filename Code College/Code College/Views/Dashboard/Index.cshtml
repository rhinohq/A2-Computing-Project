@using Code_College.Controllers;
@using Code_College.Models;

@{
    bool Redirect = false;
    int Index = 0;
    ExerciseController ExerCon = new ExerciseController();
    ExDBEntities ExDB = new ExDBEntities();
    UserDBEntities UserDB = new UserDBEntities();
    User User;

    if (Request.Cookies.AllKeys.Contains("CCUserAuth"))
    {
        HttpCookie Cookie = Request.Cookies["CCUserAuth"];

        if (!Account.VerifyCookie(Cookie))
        {
            Redirect = true;
        }
        else
        {
            string Username = Cookie.Values["Username"];
            string Password = Cookie.Values["Password"];

            ViewBag.Username = Username;
            ViewBag.Password = Password;

            User = UserDB.Users.Where(x => x.Username == Username).FirstOrDefault();

            foreach (Exercise Exercise in ExDB.Exercises)
            {
                if (Exercise.ExID >= User.UserLevel)
                {
                    DashboardController.ExerciseTiles[Index] = new DashboardController.ExTile { ExID = Exercise.ExID, ExTitle = Exercise.ExTitle, CompletedByUser = false, Locked = false };
                }
                else if (Exercise.ExID < User.UserLevel)
                {
                    DashboardController.ExerciseTiles[Index] = new DashboardController.ExTile { ExID = Exercise.ExID, ExTitle = Exercise.ExTitle, CompletedByUser = true, Locked = false };
                }
                else if (Exercise.ExID > User.UserLevel)
                {
                    DashboardController.ExerciseTiles[Index] = new DashboardController.ExTile { ExID = Exercise.ExID, ExTitle = Exercise.ExTitle, CompletedByUser = false, Locked = true };
                }
                else
                {
                    DashboardController.ExerciseTiles[Index] = new DashboardController.ExTile { ExID = Exercise.ExID, ExTitle = Exercise.ExTitle, CompletedByUser = false, Locked = true };
                }

                Index++;
            }
        }
    }
    else
    {
        Redirect = true;
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Code College, Dashboard, Learn Programming, Learn Lua, Lua, Development, Code" />
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>    <!----webfonts--->
    <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
    <title>Dash - Code College</title>

    <style type="text/css">
        .DashTitle {
            font-family: 'Roboto', sans-serif;
            font-size: x-large;
            color: white;
        }

        .Exercises {
            background-color: white;
        }

        .Exercise {
            text-align: center;
            border: thin;
            font-size: medium;
            padding: 10px;
            margin-left: 220px;
            margin-right: 220px;
        }

        .ExerciseTile {
            text-align: center;
            border: thin;
            font-size: medium;
            padding: 10px;
        }

        .Copyright {
            color: white;
            text-align: center;
            font-family: 'Roboto', sans-serif;
            font-size: small;
        }
    </style>

    <script type="text/javascript">
        var Redirect = "@Redirect";

        if (Redirect === "True") {
            window.location = "@Url.Action("Index", "Login")";
        }

        function GotoExercise(ExID) {
            window.location = "@Url.Action("Index", "Exercise")?id=" + ExID;
        }
    </script>
</head>
<body style="background-color:black;">
    <div class="DashTitle" style="height: 40px; background-color: #06D995">Code College - Dashboard</div>

    <div class="Exercises">
        @foreach (DashboardController.ExTile Tile in DashboardController.ExerciseTiles)
        {
            string ExRecord = string.Format("{0} | {1}", Tile.ExID.ToString(), Tile.ExTitle);

            if (Tile.CompletedByUser)
            {
                <div class="Exercise" style="width: 220px; height: 55px; position: relative; left: 315px; background-color: grey;">
                    <p class="ExerciseTile">
                        @ExRecord
                        <button onclick="GotoExercise(@Tile.ExID)">Try Exercise</button>
                    </p>
                </div>
            }

            if (!Tile.CompletedByUser)
            {
                if (Tile.Locked)
                {
                    <div class="Exercise" style="width: 220px; height: 55px; position: relative; left: 315px; background-color: white;">
                        <p class="ExerciseTile">
                            @ExRecord
                            <button onclick="GotoExercise(@Tile.ExID)" disabled>Try Exercise</button>
                        </p>
                    </div>
                }
                else
                {
                    <div class="Exercise" style="width: 220px; height: 55px; position: relative; left: 315px; background-color: white;">
                        <p class="ExerciseTile">
                            @ExRecord
                            <button onclick="GotoExercise(@Tile.ExID)">Try Exercise</button>
                        </p>
                    </div>
                }
            }
        }
    </div>

    <div class="Copyright">
        <p>Copyright © 2015 Code College. All Rights Reserved</p>
    </div>
</body>
</html>