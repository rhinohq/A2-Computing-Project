@using System.Web.Optimization;
@using Code_College.Controllers;
@using Code_College.Models;

@{
    LoginController LoginCon = new LoginController();

    if (Request.Cookies.AllKeys.Contains("CCUserAuth"))
    {
        HttpCookie Cookie = Request.Cookies["CCUserAuth"];

        if (!Account.VerifyCookie(Cookie))
        {
            LoginCon.Index();
        }
        else
        {
            string Username = Cookie.Values["Username"];
            string Password = Cookie.Values["Password"];

            ViewBag.Username = Username;
            ViewBag.Password = Password;
        }
    }
    else
    {
        LoginCon.Index();
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Code College, Exercise, Learn Programming, Learn Lua, Lua, Development, Code, @ViewBag.ExerciseTitle" />
    <meta name="description" content="This is the Exercise page. @ViewBag.Desc" />
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
    <title>@ViewBag.Title</title>

    @Styles.Render("~/bundles/editorcss")
    @Scripts.Render("~/bundles/editorjs")

    @Scripts.Render("~/bundles/js")

    <script>
        function UpdateConsole()
        {
            var Submission = new Object();

            Submission.id = @ViewBag.ExerciseID;
            Submission.username = "@ViewBag.Username";
            Submission.password = "@ViewBag.Password";
            Submission.code = editor.getValue() + "@ViewBag.AppendCode";

            $.ajax({
                url: '/api/code',
                type: 'POST',
                dataType: 'json',
                data: Submission,
                success: function (data, textStatus, xhr) {
                    console.log(data);
                    document.getElementById("Console").value = data;
                    var IsCorrect = CodeCorrect(data);

                    if (IsCorrect) {
                        // TODO: Set borders to green.
                    }
                    else {
                        // TODO: Set borders to red.
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error in Operation');
                    console.log(xhr);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            });
        }

        function CodeCorrect (ConsoleOutput)
        {
            if (ConsoleOutput === "Sorry, that was incorrect. Please, read the task and try again.") {
                document.getElementById("Message").innerHTML = "Incorrect, your code does not adhere to the task set, sorry.";

                return false;
            }
            else if (ConsoleOutput.startsWith('Interpreter:')) {
                document.getElementById("Message").innerHTML = "Incorrect, you have a syntax error in your code.";

                return false;
            }
            else {
                document.getElementById("Message").innerHTML = "Correct!";

                return true;
            }
        }
    </script>
</head>

<body>
    <div>
        <h1>@ViewBag.ExerciseTitle</h1>
    </div>

    <div>
        @ViewBag.Desc
    </div>

    <div>
        <textarea id="Code" name="code" value=""></textarea>
        <div class="submit"><input type="button" value="Submit" onclick="UpdateConsole()"></div>
    </div>

    <div>
        @Html.TextBox("Console", null, new { id = "Console" })
    </div>

    <div id="Message"></div>

    <script>
        var CodeTemplate = "@ViewBag.CodeTemplate";
        var Temp
        var editor = CodeMirror.fromTextArea(document.getElementById("Code"), {
            mode: "lua",
            lineNumbers: true,
            matchBrackets: true,
            theme: "night"
        });

        while (CodeTemplate != Temp) {
            Temp = CodeTemplate;

            CodeTemplate = CodeTemplate.replace("&quot;", "\"");
        }

        editor.getDoc().setValue(CodeTemplate);
    </script>
</body>
</html>